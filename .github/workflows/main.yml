name: Regenerate Mermaid Diagrams (SVG + high-res PNG)

on:
  push:
    branches:
      - main
    paths:
      - 'diagrams/**/*.mmd'
  workflow_dispatch: {}

permissions:
  contents: write

env:
  PNG_SCALE: '3'   # ajuste aqui para 2,3,4 conforme desejar

jobs:
  update-diagrams:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v5

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18.x'

      - name: Install Mermaid CLI
        run: |
          npm install -g @mermaid-js/mermaid-cli
          echo "mmdc version:"
          mmdc -v || true


      - name: Generate SVG and high-res PNG from Mermaid files (no-sandbox) + validate
        run: |
          set -euo pipefail
          mkdir -p diagrams logs
          shopt -s nullglob
          echo "Using PNG_SCALE=${PNG_SCALE}"
          for file in diagrams/*.mmd; do
            base="${file%.mmd}"
            svg="${base}.svg"
            png="${base}.png"
            logfile="logs/$(basename "${base}").mmdc.log"

            echo "Rendering $file -> $svg"
            if ! mmdc -p ./puppeteer-config.json -i "$file" -o "$svg" > "${logfile}" 2>&1; then
              echo "::error::mmdc failed while creating SVG for $file. Showing log:"
              sed -n '1,200p' "${logfile}" || true
              exit 1
            fi

            # Validate SVG begins with <?xml or <svg (ignoring leading whitespace/newlines)
            header="$(sed -n '1,10p' "$svg" | tr -d '[:space:]' | head -c 10 || true)"
            if ! printf '%s' "$header" | grep -qiE '^<(\?|svg)'; then
              echo "::error::Generated SVG for $file does not start with XML/<svg. Dumping diagnostics."
              echo "---- first 200 bytes of $svg ----"
              head -c 200 "$svg" | sed -n '1,200p' || true
              echo "---- mmdc log (first 200 lines) ----"
              sed -n '1,200p' "${logfile}" || true
              exit 1
            fi

            echo "Rendering $file -> $png (scale=${PNG_SCALE})"
            if ! mmdc -p ./puppeteer-config.json -i "$file" -o "$png" --scale "${PNG_SCALE}" >> "${logfile}" 2>&1; then
              echo "::error::mmdc failed while creating PNG for $file. Showing log:"
              sed -n '1,200p' "${logfile}" || true
              exit 1
            fi

            echo "Rendered: $svg (size: $(stat -c%s "$svg"))  $png (size: $(stat -c%s "$png"))"
          done
        shell: bash

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Install Python deps
        run: pip install pyyaml

      - name: Run index update script
        env:
          PNG_SCALE: ${{ env.PNG_SCALE }}
        run: python scripts/update_index.py

      - name: Show resulting index.yml and diagrams
        run: |
          echo "---- index.yml ----"
          sed -n '1,200p' index.yml || true
          echo "---- diagrams listing ----"
          ls -la diagrams || true

      - name: Commit updated diagrams and index
        uses: stefanzweifel/git-auto-commit-action@v7
        with:
          commit_message: "CI: update Mermaid SVG + high-res PNG and index"
          file_pattern: |
            diagrams/*
            index.yml
